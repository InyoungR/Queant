user  nginx; # 프로세스의 실행되는 권한. 보안상 root를 사용하지 않습니다.
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    server {
        listen 80;
        listen [::]:80;
        server_name i7a201.p.ssafy.io;
        location / {
            return 301 https://$host$request_uri;
        }
        

        location /robots.txt {
          return 200 "User-agent: *\nDisallow: /";
        }

    }

    #프론트 서버
    server {
        listen 443 ssl;
        server_name i7a201.p.ssafy.io;

        ssl_certificate /etc/zerossl/certificate.crt;
        ssl_certificate_key /etc/zerossl/private.key;

        location / { 
            proxy_pass http://queant-frontend:8080;
            proxy_set_header    Host                $http_host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        }

        location /api/ {
            proxy_pass http://queant-backend:8000;
            proxy_set_header    Host                $http_host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        }

        location /robots.txt {
            return 200 "User-agent: *\nDisallow: /";
        }
    }

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    server_tokens     off;
    keepalive_timeout  65;
    include /etc/nginx/conf.d/*.conf;
}